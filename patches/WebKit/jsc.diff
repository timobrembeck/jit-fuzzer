diff --git Source/JavaScriptCore/jsc.cpp Source/JavaScriptCore/jsc.cpp
index 8111dd6bc0..189314ab4a 100644
@@ -398,10 +398,13 @@
 static EncodedJSValue JSC_HOST_CALL functionMallocInALoop(JSGlobalObject*, CallFrame*);
 static EncodedJSValue JSC_HOST_CALL functionTotalCompileTime(JSGlobalObject*, CallFrame*);
 
 static EncodedJSValue JSC_HOST_CALL functionSetUnhandledRejectionCallback(JSGlobalObject*, CallFrame*);
 
+// Custom function for receiving afl input
+static EncodedJSValue JSC_HOST_CALL functionGetAFLInput(JSGlobalObject*, CallFrame*);
+
 struct Script {
     enum class StrictMode {
         Strict,
         Sloppy
     };
@@ -652,10 +655,13 @@
         addFunction(vm, "disableRichSourceInfo", functionDisableRichSourceInfo, 0);
         addFunction(vm, "mallocInALoop", functionMallocInALoop, 0);
         addFunction(vm, "totalCompileTime", functionTotalCompileTime, 0);
 
         addFunction(vm, "setUnhandledRejectionCallback", functionSetUnhandledRejectionCallback, 1);
+
+        // Custom function for receiving afl input
+        addFunction(vm, "getAFLInput", functionGetAFLInput, 1);
     }
     
     void addFunction(VM& vm, JSObject* object, const char* name, NativeFunction function, unsigned arguments)
     {
         Identifier identifier = Identifier::fromString(vm, name);
@@ -2424,10 +2430,20 @@
 
     globalObject->setUnhandledRejectionCallback(vm, object);
     return JSValue::encode(jsUndefined());
 }
 
+// Custom function for receiving afl input
+EncodedJSValue JSC_HOST_CALL functionGetAFLInput(JSGlobalObject* globalObject, CallFrame* callFrame) {
+    fprintf(stdout, "[JSC] getAFLInput()\n");
+    // get AFL input value from qemu
+    int afl_input = syscall(536);
+    fprintf(stdout, "[JSC] AFL input: %d\n", afl_input);
+    // return input to js script
+    return JSValue::encode(jsNumber(afl_input));
+}
+
 // Use SEH for Release builds only to get rid of the crash report dialog
 // (luckily the same tests fail in Release and Debug builds so far). Need to
 // be in a separate main function because the jscmain function requires object
 // unwinding.
 
